<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.itwillbs.mappers.productionMapper">

<insert id="insertLine">
insert into LINE(LINE_CD, USER_ID, LINE_STATUS, LINE_NAME, LINE_DATE)
values(#{lineCode}, #{name}, #{lineStatus}, #{lineName}, #{update})
</insert>

<select id="getLineList" resultType="com.itwillbs.domain.ProductionDTO">
	select l.LINE_CD "lineCode", l.USER_ID "name", l.LINE_STATUS "lineStatus", l.LINE_NAME "lineName", l.LINE_DATE "update", u.USER_NAME "userName"
	from LINE l left join USER u
	on l.USER_ID = u.USER_ID
	<where>
	<if test="search1 != '' and search1 != null"  >
	l.LINE_CD like concat('%', #{search1}, '%')
	</if>
	<if test="search2 != '' and search2 != null ">
	and l.LINE_NAME like concat('%', #{search2}, '%')
	</if>
	<if test="search5 != '' and search5 != null and search5 != 4">
	and l.LINE_STATUS like concat('%', #{search5}, '%')
	</if>
	<if test="search5 == 0">
	and l.LINE_STATUS = 0
	</if>
	</where>
	order by l.LINE_CD desc
    limit #{startRow}, #{pageSize}
</select>

<select id="getLineCount" resultType="java.lang.Integer">
	select count(*)
	from LINE
	<where>
	<if test="search1 != '' and search1 != null"  >
	LINE_CD like concat('%', #{search1}, '%')
	</if>
	<if test="search2 != '' and search2 != null ">
	and LINE_NAME like concat('%', #{search2}, '%')
	</if>
	<if test="search5 != '' and search5 != null and search5 != 4">
	and LINE_STATUS like concat('%', #{search5}, '%')
	</if>
	<if test="search5 == 0">
	and LINE_STATUS = 0
	</if>
	</where>
</select>

<select id="getLineCode" resultType="com.itwillbs.domain.ProductionDTO">
	select LINE_CD "lineCode"
	from LINE
	where LINE_CD = #{lineCode}
</select>

<update id="switchLineStatus">
	update LINE
	SET LINE_STATUS = 1
	where LINE_CD = #{lineCode}
</update>

<update id="switchLineStatus0">
	update LINE
	SET LINE_STATUS = 0
	where LINE_CD = #{lineCode}
</update>

<insert id="insertInstruction">
	insert into INSTRUCTION
	values(#{instructionCode}, #{name}, #{lineCode}, #{insVol}, #{instructionDate}, 0, #{productCode})
</insert>

<!-- INSTRUCTION 작업지시 -->
<select id="getInstructionList" resultType="com.itwillbs.domain.ProductionDTO">
	SELECT i.INS_CD "instructionCode", i.LINE_CD "lineCode", i.INS_VOL "insVol", i.INS_DATE "instructionDate", i.INS_STATUS "instractionStatus", i.PRO_CD "productCode", p.PRO_NAME as "productName"
	from INSTRUCTION i join PRODUCT p
	ON i.PRO_CD = p.PRO_CD
	<where>
	<if test="search1 != '' and search1 != null"  >
	i.INS_CD like concat('%', #{search1}, '%')
	</if>
	<if test="search2 != '' and search2 != null ">
	and i.PRO_CD like concat('%', #{search2}, '%')
	</if>
	<if test="search5 != '' and search5 != null and search5 != 4">
	and i.INS_STATUS like concat('%', #{search5}, '%')
	</if>
	<if test="search5 == 0">
	and i.INS_STATUS = 0
	</if>
	<if test="search3 != '' and search4 != '' and search3 != null and search4 != null">
	and i.INS_DATE between #{search3} and #{search4}</if>
	<if test="search3 == '' and search4 != ''" >
	and i.INS_DATE &lt;= #{search4}</if>
	<if test="search3 != '' and search4 == ''" >
	and i.INS_DATE &gt;= #{search3}</if>
	</where>
	order by i.INS_CD desc
	limit #{startRow}, #{pageSize}
</select>

<select id="getInsCount" resultType="java.lang.Integer">
	select count(*)
	from INSTRUCTION
	<where>
	<if test="search1 != '' and search1 != null"  >
	INS_CD like concat('%', #{search1}, '%')
	</if>
	<if test="search2 != '' and search2 != null ">
	and PRO_CD like concat('%', #{search2}, '%')
	</if>
	<if test="search5 != '' and search5 != null and search5 != 4">
	and INS_STATUS like concat('%', #{search5}, '%')
	</if>
	<if test="search5 == 0">
	and INS_STATUS = 0
	</if>
	<if test="search3 != '' and search4 != '' and search3 != null and search4 != null">
	and INS_DATE between #{search3} and #{search4}</if>
	<if test="search3 == '' and search4 != ''" >
	and INS_DATE &lt;= #{search4}</if>
	<if test="search3 != '' and search4 == ''" >
	and INS_DATE &gt;= #{search3}</if>
	</where>
</select>

<!-- PERFORMANCE 생산실적 -->
<select id="getPerformanceList" resultType="com.itwillbs.domain.ProductionDTO">
	SELECT per.PER_CD "perCode", per.INS_CD "instructionCode", ins.LINE_CD "lineCode", ins.PRO_CD "productCode", pro.PRO_NAME "productName", ins.INS_VOL "insVol", per.ACTUAL_COMPLETION_AMOUNT "perACA", per.PER_NOTE "perNote", per.PER_DATE "perDate", ins.USER_ID "name"
	FROM PERFORMANCE per LEFT JOIN INSTRUCTION ins
	on per.INS_CD = ins.INS_CD
	LEFT JOIN PRODUCT pro
	ON pro.PRO_CD = ins.PRO_CD
	order by PER_CD desc
</select>

<select id="getProductList" resultType="com.itwillbs.domain.ProductionDTO">
	select PRO_CD "productCode", PRO_NAME "productName", PRO_VOL "productVol"
	from PRODUCT
	<where>
	PRO_TYPE = 0
	<if test="search1 != '' and search1 != null"  >
	and PRO_CD like concat('%', #{search1}, '%')
	</if>
	<if test="search2 != '' and search2 != null ">
	and PRO_NAME like concat('%', #{search2}, '%')
	</if>
	</where>
	order by PRO_CD desc
	limit #{startRow}, #{pageSize}
</select>

<select id="getProCount" resultType="java.lang.Integer">
	select count(*)
	from PRODUCT
	<where>
	PRO_TYPE = 0
	<if test="search1 != '' and search1 != null"  >
	and PRO_CD like concat('%', #{search1}, '%')
	</if>
	<if test="search2 != '' and search2 != null ">
	and PRO_NAME like concat('%', #{search2}, '%')
	</if>
	</where>
</select>

<update id="updateLine">
	update LINE
	SET LINE_NAME = #{lineName}, LINE_STATUS = #{lineStatus}, USER_ID = #{name}
	where LINE_CD = #{lineCode}
</update>

<delete id="deleteLine">
	delete
	from LINE
	WHERE LINE_CD = #{lineCode}
</delete>

<select id="getInstruction" resultType="com.itwillbs.domain.ProductionDTO">
	select i.INS_CD "instructionCode", i.LINE_CD "lineCode", i.INS_VOL "insVol", i.INS_DATE "instructionDate", i.INS_STATUS "instractionStatus", i.PRO_CD "productCode", p.PRO_NAME as "productName"
	from INSTRUCTION i join PRODUCT p
	ON i.PRO_CD = p.PRO_CD
	WHERE i.INS_CD = #{instructionCode}
</select>

<update id="updateInstruction">
	update INSTRUCTION
	SET PRO_CD = #{productCode}, LINE_CD = #{lineCode}, INS_VOL = #{insVol}, INS_DATE = #{instructionDate}, USER_ID = #{name}
	where INS_CD = #{instructionCode}
</update>

<delete id="deleteInstruction">
	delete
	from INSTRUCTION
	where INS_CD = #{instructionCode}
</delete>

<update id="updateInsStatus">
	update INSTRUCTION
	SET INS_STATUS = 2
	where INS_CD = #{instructionCode}
</update>

<select id="getInsLNum" resultType="java.lang.Integer">
	SELECT REGEXP_REPLACE(INS_CD, '[^0-9]', '') AS numbers_only
	FROM INSTRUCTION
	ORDER BY numbers_only DESC
	LIMIT 1
</select>

<select id="setLineLastCode" resultType="java.lang.Integer">
	SELECT REGEXP_REPLACE(LINE_CD, '[^0-9]', '') AS numbers_only
	FROM LINE
	ORDER BY numbers_only DESC
	LIMIT 1
</select>

<select id="getCompInstructionList" resultType="com.itwillbs.domain.ProductionDTO">
	SELECT i.INS_CD "instructionCode", i.INS_VOL "insVol", i.INS_DATE "instructionDate", i.PRO_CD "productCode", p.PRO_NAME as "productName"
	from INSTRUCTION i join PRODUCT p
	ON i.PRO_CD = p.PRO_CD
	<where>
	i.INS_STATUS = 2
	<if test="search1 != '' and search1 != null"  >
	and i.INS_CD like concat('%', #{search1}, '%')
	</if>
	<if test="search2 != '' and search2 != null ">
	and i.PRO_CD like concat('%', #{search2}, '%')
	</if>
	<if test="search3 != '' and search4 != '' and search3 != null and search4 != null">
	and i.INS_DATE between #{search3} and #{search4}</if>
	<if test="search3 == '' and search4 != ''" >
	and i.INS_DATE &lt;= #{search4}</if>
	<if test="search3 != '' and search4 == ''" >
	and i.INS_DATE &gt;= #{search3}</if>
	</where>
	order by INS_CD desc
	limit #{startRow}, #{pageSize}
</select>

<select id="getComInsCount" resultType="java.lang.Integer">
	select count(*)
	from INSTRUCTION
	<where>
	INS_STATUS = 2
	<if test="search1 != '' and search1 != null"  >
	and INS_CD like concat('%', #{search1}, '%')
	</if>
	<if test="search2 != '' and search2 != null ">
	and PRO_CD like concat('%', #{search2}, '%')
	</if>
	<if test="search3 != '' and search4 != '' and search3 != null and search4 != null">
	and INS_DATE between #{search3} and #{search4}</if>
	<if test="search3 == '' and search4 != ''" >
	and INS_DATE &lt;= #{search4}</if>
	<if test="search3 != '' and search4 == ''" >
	and INS_DATE &gt;= #{search3}</if>
	</where>
</select>

<insert id="insertPer">
	insert into PERFORMANCE
	values(#{perCode}, #{instructionCode}, #{perGood}, #{perNote}, #{perDate}, #{perACA})
</insert>

<select id="getPerLastNum" resultType="java.lang.Integer">
	SELECT REGEXP_REPLACE(PER_CD, '[^0-9]', '') AS numbers_only
	FROM PERFORMANCE
	ORDER BY numbers_only DESC
	LIMIT 1
</select>

<select id="getPerList" resultType="com.itwillbs.domain.ProductionDTO">
	SELECT p.PER_CD "perCode", p.PER_GOOD "perGood", p.PER_NOTE "perNote", p.ACTUAL_COMPLETION_AMOUNT "perACA", i.INS_CD "instructionCode", i.INS_VOL "insVol", i.PRO_CD "productCode", pro.PRO_NAME "productName"
	from PERFORMANCE p left join INSTRUCTION i
	ON p.INS_CD = i.INS_CD
	left join PRODUCT pro
	on i.PRO_CD = pro.PRO_CD
	where p.INS_CD = #{instructionCode}
</select>

<select id="getPerformance" resultType="com.itwillbs.domain.ProductionDTO">
	select PER_CD "perCode", INS_CD "instructionCode", PER_GOOD "perGood", PER_NOTE "perNote", ACTUAL_COMPLETION_AMOUNT "perACA", PER_DATE "perDate"
	from PERFORMANCE
	where INS_CD = #{instructionCode}
	LIMIT 1
</select>

<select id="getLineLastNum" resultType="java.lang.Integer">
	SELECT REGEXP_REPLACE(LINE_CD, '[^0-9]', '') AS numbers_only
	FROM LINE
	ORDER BY numbers_only DESC
	LIMIT 1
</select>

<update id="updatePer">
	update PERFORMANCE
	SET ACTUAL_COMPLETION_AMOUNT = #{perACA}, PER_GOOD = #{perGood}, PER_NOTE = #{perNote}
	WHERE PER_CD = #{perCode}
</update>

<delete id="deletePer">
	delete 
	from PERFORMANCE
	where PER_CD = #{perCode}
</delete>

<select id="getReq" resultType="com.itwillbs.domain.ProductDTO">
	select REQ_CD "requiredCode", REQ_VOL "requiredVol", PP_CD "productPName", MP_CD "productName"
	from REQUIRED
	where PP_CD = #{productCode}
</select>

<select id="getReqDetail" resultType="com.itwillbs.domain.ProductionDTO">
	select r.REQ_CD "reqCode", r.REQ_VOL "reqVol", r.PP_CD "pProCode", r.MP_CD "mProCode", p1.PRO_NAME "proName1", p2.PRO_NAME "proName2"
	from REQUIRED r left join PRODUCT p1
	on r.PP_CD = p1.PRO_CD
	left join PRODUCT p2
	on r.MP_CD = p2.PRO_CD
	where PP_CD = #{productCode}
</select>

<update id="updateVol">
	update PRODUCT
	set PRO_VOL = #{prodcutVol}
	where PRO_CD = #{productCode}
</update>

<select id="getProductVolToProCode" resultType="java.lang.Integer">
	select PRO_VOL "productVol"
	from PRODUCT
	where PRO_CD = #{productCode}
</select>

<update id="addVol">
	update PRODUCT
	set PRO_VOL = #{vol}
	where PRO_CD = #{productCode}
</update>

<select id="getPerGood" resultType="java.lang.Integer">
	select PER_GOOD "perGood"
	from PERFORMANCE
	where PER_CD = #{perCode}
</select>

<select id="getPerACAToPerCode" resultType="java.lang.Integer">
	select ACTUAL_COMPLETION_AMOUNT "perACA"
	from PERFORMANCE
	where PER_CD = #{perCode}
</select>

<select id="getProductCodeToPerCD" resultType="java.lang.String">
	select i.PRO_CD "productCode"
	from PERFORMANCE p left join INSTRUCTION i
	on p.INS_CD = i.INS_CD
	where PER_CD = #{perCode}
</select>

<insert id="insertPib">
	insert into PINBOUND
	values(#{pibCode}, null, #{perCode}, null, 0)
</insert>

<delete id="deletePib">
	delete 
	from PINBOUND
	where PER_CD = #{perCode}
</delete>

<select id="getPibLastNum" resultType="java.lang.Integer">
	SELECT REGEXP_REPLACE(PIB_CD, '[^0-9]', '') AS numbers_only
	FROM PINBOUND
	ORDER BY numbers_only DESC
	LIMIT 1
</select>

<select id="getLine" resultType="com.itwillbs.domain.ProductionDTO">
	select LINE_CD "lineCode", USER_ID "name", LINE_STATUS "lineStatus", LINE_NAME "lineName", LINE_DATE "update"
	from LINE
	where LINE_CD = #{lineCode}
</select>

<select id="getPib" resultType="com.itwillbs.domain.ProductionDTO">
	select PIB_CD "pibCode", USER_ID "name", PIB_INFO_STATUS "pibStatus", PER_CD "perCode"
	from PINBOUND
	where PER_CD = #{perCode}
</select>

<select id="getInsVol" resultType="com.itwillbs.domain.ProductionDTO">
	select INS_VOL "insVol", INS_CD "instructionCode"
	from INSTRUCTION
</select>

<select id="performanceAmount" resultType="com.itwillbs.domain.ProductionDTO">
select  i.INS_CD "instructionCode" , p1.PRO_NAME "productName" ,i.INS_VOL "insVol" , p.ACTUAL_COMPLETION_AMOUNT "perACA" ,p.PER_DATE "perDate" , (((i.INS_VOL -p.ACTUAL_COMPLETION_AMOUNT)/i.INS_VOL)*100) "defectRate"
from PERFORMANCE p join PRODUCT p1
join INSTRUCTION i
where PRO_TYPE = 0
</select>


</mapper>